latest_casenew_format<-latestcase_new%>%format(justify="right",big.mark= ",",digits=0,scientific=FALSE)
#get the lowest monthly cases in 2021
lowestnew2021min<-case_monthly_epicurve%>%filter(year(month)==2021)%>%
filter(cases_cummonth==min(cases_cummonth,na.rm=TRUE))%>%head(1)%>%
pull(cases_cummonth)
#get the month of the lowest monthly cases in 2021
lowestnew2021date<-case_monthly_epicurve%>%filter(year(month)==2021)%>%filter(cases_cummonth==lowestnew2021min,na.rm=TRUE)%>%head(1)%>%pull(month)
#format the lowest monthly cases in 2021
lowestnew2021_format<-lowestnew2021min%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
#get the lowest monthly cases in 2022
lowestnew2022min<-case_monthly_epicurve%>%filter(year(month)==2022)%>%filter(cases_cummonth==min(cases_cummonth,na.rm=TRUE))%>%head(1)%>%pull(cases_cummonth)
#get the month of the lowest monthly cases in 2022
lowestnew2022date<-case_monthly_epicurve%>%filter(year(month)==2022)%>%filter(cases_cummonth==lowestnew2022min,na.rm=TRUE)%>%head(1)%>%pull(month)
#format the lowest monthly cases in 2022
lowestnew2022_format<-lowestnew2022min%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
#get the maximal monthly cases
maxcum<-max(case_monthly_epicurve$cases_cummonth,na.rm=TRUE)
#plot monthly cases
caseplot<-ggplot(case_monthly_epicurve)+
geom_col(aes(x=month,y=cases_cummonth),fill="#B4C7E7")+
#add the black line of the lowest monthly cases of 2021
geom_col(aes(y={lowestnew2021min}/38,x={lowestnew2021date}),color="black")+
#add the black line of the lowest monthly cases of 2022
geom_col(aes(y={lowestnew2022min}/37,x={lowestnew2022date}),color="black")+
#add the red line of the latest monthly cases
geom_col(aes(y={latestcase_new}/35,x={latestnew_date}),color="red")+
#set axis title
labs(y     = "Monthly New Cases",
x     = "Month of Report") +
#set the color of the monthly cases column
scale_fill_manual("",values=c("#B4C7E7"))+
#add annotation of the lowest monthly cases of 2021
annotate("text",x={lowestnew2021date},y={lowestnew2021min}+{maxcum}/2,label=glue("2021:\n LOWEST\n CASES\n \n{lowestnew2021_format}"),size=2)+
#add annotation of the lowest monthly cases of 2022
annotate("text",x={lowestnew2022date},y={lowestnew2022min}+{maxcum}/1.1,label=glue("2022:\n LOWEST\n CASES\n \n \n{lowestnew2022_format}"),size=2)+
#add annotation of the latest monthly cases
annotate("text",x={latestnew_date},y={latestcase_new}+{maxcum}/2,label=glue("LATEST\n CASES\n \n{latest_casenew_format}"),size=2)+
#set the maximal value of y axis
scale_y_continuous(limits=c(0,max(case_monthly_epicurve$cases_cummonth,na.rm=TRUE)*1.3),labels=label_number(big.mark =","))+
#set theme
theme(axis.title=element_text(size=rel(0.6),face="bold"),
axis.text=element_text(size = rel(0.6), face = "bold"),
legend.key.size = unit(0.5, "lines"),
legend.text = element_text(size = rel(0.60), face = "bold"),
legend.position="top")
return(caseplot)
}
}
#plot daily, weekly, or monthy case plot
caseplot<-casedaily_weekly_plot(params$timeframe)
#ggplot case title
casetitleplot<-ggplot()+theme_void()+
annotation_custom(casetitle,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#ggplot case numbers
casenumbersplot<-ggplot()+theme_void()+
annotation_custom(casenumbers,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#combine plots
casebottomplot<-cowplot::plot_grid(casenumbersplot,caseplot,ncol=2,rel_widths=c(1,1.5))
casefinalplot<-cowplot::plot_grid(casetitleplot,casebottomplot,nrow=2,rel_heights=c(1,3))
casefinalplot
install.packages("shinythemes")
_quarto.yml
quarto.yml
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
rsconnect::deployApp()
shiny::runApp()
renv::restore()
remove.packages('stringi')
install.packages('stringi')
library(DiagrammeR)
renv::restore()
library(DiagrammeR)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
# define the global styles of the nodes. We can override these in box if we wish
node [shape     = rectangle,
style     = filled,
fillcolor = Linen]
subgraph cluster_0 {
label = 'SAprocessR'
EDAV [label     = 'EDAV',
shape     = cylinder,
fillcolor = Grey]
Grasp [label     = 'Grasp \n SQL \n Server',
shape     = cylinder,
fillcolor = Grey]
External [label     = 'External \n Source',
shape     = cylinder,
fillcolor = Grey]
Process [label     =  'Process \n Data',
shape     = polygon,
fillcolor = Linen]
}
subgraph cluster_1 {
label = 'SAreportR'
Store [label     = 'Data \n Store',
shape     = parallelogram,
fillcolor = Beige]
Archive [label = 'Report \n Archive',
shape = folder,
fillcolor = Beige]
Template [label     = 'Templates',
shape     = memo,
fillcolor = Beige]
Reports [label     = 'Reports',
shape     =  document,
fillcolor = White]
}
subgraph cluster_2 {
label = 'SAdistributeR'
Etemplate [label = 'Email \n Template',
shape     = signature,
fillcolor = White]
Escript [label   = 'Email \n Script',
shape     = document,
fillcolor = White]
}
subgraph cluster_3 {
label = 'SAviewR'
Dashboard [label     = 'Shiny \n Dashboard',
shape     = rect,
fillcolor = Beige, margin = 0.25]
Viewer [label     = 'Viewer']
Owner [label     = 'Owner']
Admin [label     = 'Administrator']
Contributor [label     = 'Contributor']
}
# edge definitions with the node IDs
{Grasp External}  -> Process
EDAV -> Process
Process -> EDAV [label = 'Store Data',
fontcolor = blue,
color = black]
Process -> Store
Store -> {Template Dashboard}
Template -> Reports -> Archive -> Dashboard
{Viewer  Owner  Admin Contributor} ->  Dashboard
Reports -> Etemplate -> Escript
}
")
install.packages('rsvg')
rsvg::rsvg_png(graph, "flowchart")
library(DiagrammeR)
graph <- DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
# define the global styles of the nodes. We can override these in box if we wish
node [shape     = rectangle,
style     = filled,
fillcolor = Linen]
subgraph cluster_0 {
label = 'SAprocessR'
EDAV [label     = 'EDAV',
shape     = cylinder,
fillcolor = Grey]
Grasp [label     = 'Grasp \n SQL \n Server',
shape     = cylinder,
fillcolor = Grey]
External [label     = 'External \n Source',
shape     = cylinder,
fillcolor = Grey]
Process [label     =  'Process \n Data',
shape     = polygon,
fillcolor = Linen]
}
subgraph cluster_1 {
label = 'SAreportR'
Store [label     = 'Data \n Store',
shape     = parallelogram,
fillcolor = Beige]
Archive [label = 'Report \n Archive',
shape = folder,
fillcolor = Beige]
Template [label     = 'Templates',
shape     = memo,
fillcolor = Beige]
Reports [label     = 'Reports',
shape     =  document,
fillcolor = White]
}
subgraph cluster_2 {
label = 'SAdistributeR'
Etemplate [label = 'Email \n Template',
shape     = signature,
fillcolor = White]
Escript [label   = 'Email \n Script',
shape     = document,
fillcolor = White]
}
subgraph cluster_3 {
label = 'SAviewR'
Dashboard [label     = 'Shiny \n Dashboard',
shape     = rect,
fillcolor = Beige, margin = 0.25]
Viewer [label     = 'Viewer']
Owner [label     = 'Owner']
Admin [label     = 'Administrator']
Contributor [label     = 'Contributor']
}
# edge definitions with the node IDs
{Grasp External}  -> Process
EDAV -> Process
Process -> EDAV [label = 'Store Data',
fontcolor = blue,
color = black]
Process -> Store
Store -> {Template Dashboard}
Template -> Reports -> Archive -> Dashboard
{Viewer  Owner  Admin Contributor} ->  Dashboard
Reports -> Etemplate -> Escript
}
")
graph
rsvg::rsvg_png(graph, "flowchart")
?rsvg::rsvg_png
library(DiagrammeR)
graph <- DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
# define the global styles of the nodes. We can override these in box if we wish
node [shape     = rectangle,
style     = filled,
fillcolor = Linen]
subgraph cluster_0 {
label = 'SAprocessR'
EDAV [label     = 'EDAV',
shape     = cylinder,
fillcolor = Grey]
Grasp [label     = 'Grasp \n SQL \n Server',
shape     = cylinder,
fillcolor = Grey]
External [label     = 'External \n Source',
shape     = cylinder,
fillcolor = Grey]
Process [label     =  'Process \n Data',
shape     = polygon,
fillcolor = Linen]
}
subgraph cluster_1 {
label = 'SAreportR'
Store [label     = 'Data \n Store',
shape     = parallelogram,
fillcolor = Beige]
Archive [label = 'Report \n Archive',
shape = folder,
fillcolor = Beige]
Template [label     = 'Templates',
shape     = memo,
fillcolor = Beige]
Reports [label     = 'Reports',
shape     =  document,
fillcolor = White]
}
subgraph cluster_2 {
label = 'SAdistributeR'
Etemplate [label = 'Email \n Template',
shape     = signature,
fillcolor = White]
Escript [label   = 'Email \n Script',
shape     = document,
fillcolor = White]
}
subgraph cluster_3 {
label = 'SAviewR'
Dashboard [label     = 'Shiny \n Dashboard',
shape     = rect,
fillcolor = Beige, margin = 0.25]
Viewer [label     = 'Viewer']
Owner [label     = 'Owner']
Admin [label     = 'Administrator']
Contributor [label     = 'Contributor']
}
# edge definitions with the node IDs
{Grasp External}  -> Process
EDAV -> Process
Process -> EDAV [label = 'Store Data',
fontcolor = blue,
color = black]
Process -> Store
Store -> {Template Dashboard}
Template -> Reports -> Archive -> Dashboard
{Viewer  Owner  Admin Contributor} ->  Dashboard
Reports -> Etemplate -> Escript
}
")
graph
rsvg::rsvg_png(graph, "flowchart.png")
library(DiagrammeR)
graph <- DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = LR]
# define the global styles of the nodes. We can override these in box if we wish
node [shape     = rectangle,
style     = filled,
fillcolor = Linen]
subgraph cluster_0 {
label = 'SAprocessR'
EDAV [label     = 'EDAV',
shape     = cylinder,
fillcolor = Grey]
Grasp [label     = 'Grasp \n SQL \n Server',
shape     = cylinder,
fillcolor = Grey]
External [label     = 'External \n Source',
shape     = cylinder,
fillcolor = Grey]
Process [label     =  'Process \n Data',
shape     = polygon,
fillcolor = Linen]
}
subgraph cluster_1 {
label = 'SAreportR'
Store [label     = 'Data \n Store',
shape     = parallelogram,
fillcolor = Beige]
Archive [label = 'Report \n Archive',
shape = folder,
fillcolor = Beige]
Template [label     = 'Templates',
shape     = memo,
fillcolor = Beige]
Reports [label     = 'Reports',
shape     =  document,
fillcolor = White]
}
subgraph cluster_2 {
label = 'SAdistributeR'
Etemplate [label = 'Email \n Template',
shape     = signature,
fillcolor = White]
Escript [label   = 'Email \n Script',
shape     = document,
fillcolor = White]
}
subgraph cluster_3 {
label = 'SAviewR'
Dashboard [label     = 'Shiny \n Dashboard',
shape     = rect,
fillcolor = Beige, margin = 0.25]
Viewer [label     = 'Viewer']
Owner [label     = 'Owner']
Admin [label     = 'Administrator']
Contributor [label     = 'Contributor']
}
# edge definitions with the node IDs
{Grasp External}  -> Process
EDAV -> Process
Process -> EDAV [label = 'Store Data',
fontcolor = blue,
color = black]
Process -> Store
Store -> {Template Dashboard}
Template -> Reports -> Archive -> Dashboard
{Viewer  Owner  Admin Contributor} ->  Dashboard
Reports -> Etemplate -> Escript
}
")
graph
rsvg::rsvg_png(graph, "flowchart.png")
library(DiagrammeR)
graph <- DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = LR]
# define the global styles of the nodes. We can override these in box if we wish
node [shape     = rectangle,
style     = filled,
fillcolor = Linen]
subgraph cluster_0 {
graph [layout = dot, rankdir = LR]
label = 'SAprocessR'
EDAV [label     = 'EDAV',
shape     = cylinder,
fillcolor = Grey]
Grasp [label     = 'Grasp \n SQL \n Server',
shape     = cylinder,
fillcolor = Grey]
External [label     = 'External \n Source',
shape     = cylinder,
fillcolor = Grey]
Process [label     =  'Process \n Data',
shape     = polygon,
fillcolor = Linen]
}
subgraph cluster_1 {
label = 'SAreportR'
Store [label     = 'Data \n Store',
shape     = parallelogram,
fillcolor = Beige]
Archive [label = 'Report \n Archive',
shape = folder,
fillcolor = Beige]
Template [label     = 'Templates',
shape     = memo,
fillcolor = Beige]
Reports [label     = 'Reports',
shape     =  document,
fillcolor = White]
}
subgraph cluster_2 {
label = 'SAdistributeR'
Etemplate [label = 'Email \n Template',
shape     = signature,
fillcolor = White]
Escript [label   = 'Email \n Script',
shape     = document,
fillcolor = White]
}
subgraph cluster_3 {
label = 'SAviewR'
Dashboard [label     = 'Shiny \n Dashboard',
shape     = rect,
fillcolor = Beige, margin = 0.25]
Viewer [label     = 'Viewer']
Owner [label     = 'Owner']
Admin [label     = 'Administrator']
Contributor [label     = 'Contributor']
}
# edge definitions with the node IDs
{Grasp External}  -> Process
EDAV -> Process
Process -> EDAV [label = 'Store Data',
fontcolor = blue,
color = black]
Process -> Store
Store -> {Template Dashboard}
Template -> Reports -> Archive -> Dashboard
{Viewer  Owner  Admin Contributor} ->  Dashboard
Reports -> Etemplate -> Escript
}
")
graph
''
rsvg::rsvg_png(graph, "flowchart.png")
library(DiagrammeR)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
# define the global styles of the nodes. We can override these in box if we wish
node [shape     = rectangle,
style     = filled,
fillcolor = Linen]
subgraph cluster_0 {
label = 'SAprocessR'
EDAV [label     = 'EDAV',
shape     = cylinder,
fillcolor = Grey]
Grasp [label     = 'Grasp \n SQL \n Server',
shape     = cylinder,
fillcolor = Grey]
External [label     = 'External \n Source',
shape     = cylinder,
fillcolor = Grey]
Process [label     =  'Process \n Data',
shape     = polygon,
fillcolor = Linen]
}
subgraph cluster_1 {
label = 'SAreportR'
Store [label     = 'Data \n Store',
shape     = parallelogram,
fillcolor = Beige]
Archive [label = 'Report \n Archive',
shape = folder,
fillcolor = Beige]
Template [label     = 'Templates',
shape     = memo,
fillcolor = Beige]
Reports [label     = 'Reports',
shape     =  document,
fillcolor = White]
}
subgraph cluster_2 {
label = 'SAdistributeR'
Etemplate [label = 'Email \n Template',
shape     = signature,
fillcolor = White]
Escript [label   = 'Email \n Script',
shape     = document,
fillcolor = White]
}
subgraph cluster_3 {
label = 'SAviewR'
Dashboard [label     = 'Shiny \n Dashboard',
shape     = rect,
fillcolor = Beige, margin = 0.25]
Viewer [label     = 'Viewer']
Owner [label     = 'Owner']
Admin [label     = 'Administrator']
Contributor [label     = 'Contributor']
}
# edge definitions with the node IDs
{Grasp External}  -> Process
EDAV -> Process
Process -> EDAV [label = 'Store Data',
fontcolor = blue,
color = black]
Process -> Store
Store -> {Template Dashboard}
Template -> Reports -> Archive -> Dashboard
{Viewer  Owner  Admin Contributor} ->  Dashboard
Reports -> Etemplate -> Escript
}
")
pkgdown::build_site()
night_owlish <- "https://raw.githubusercontent.com/batpigandme/night-owlish/master/rstheme/night-owlish.rstheme"
rstudioapi::addTheme(night_owlish, apply = TRUE)
yule_theme <- "https://raw.githubusercontent.com/gadenbuie/yule-rstudio/master/Yule-RStudio.rstheme"
rstudioapi::addTheme(yule_theme, apply = TRUE)
Synthwave85 <- "https://raw.githubusercontent.com/jnolis/synthwave85/master/Synthwave85.rstheme"
rstudioapi::addTheme(Synthwave85, apply = TRUE)
