prioraveragename=glue("Prior 7-Day Average of New Admissions ({hospend_date_13} - {hospend_date_7})"),
prioraveragenumber=hosp_numbers$hosp_prior_7avg
)%>%
pivot_longer( cols = everything(),
names_to = "names",
values_to = "val",
values_transform = list(val = as.character))%>%select(val)%>%flextable()
return(hosp_numbers_list)}
else if(timeframe=="Weekly"|timeframe=="Monthly") {
hosp_numbers_list<-data.frame(
patientsname=glue("Patients Currently Hospitalized with COVID on {hospend_date}"),
patientnumber=hosp_numbers$total_patients,
newname=glue("New Admissions on {hospend_date}"),
newnumber=hosp_numbers$hosp_new,
peakname=glue("Peak in New Admissions({hosp_newpeakdate})"),
admissionpeak=hosp_newpeakformat,
changename="Change in 14-Day Average of New Admissioins",
change=hosp_numbers$hosp_14change,
averagename=glue("Current 14-Day Average of New Admissions ({hospend_date_13} - {hospend_date})"),
averagenumber=hosp_numbers$hosp_14avg,
prioraveragename=glue("Prior 14-Day Average of New Admissions ({hospend_date_27} - {hospend_date_14})"),
prioraveragenumber=hosp_numbers$hosp_prior_14avg
)%>%
pivot_longer( cols = everything(),
names_to = "names",
values_to = "val",
values_transform = list(val = as.character))%>%select(val)%>%flextable()
return(hosp_numbers_list)
}
}
hosp_numbers_list<-hospdaily_weekly_numbers(params$timeframe)
hosp_numbers_list<-numberslistformat(hosp_numbers_list)
hosp_numbers_list<-width(hosp_numbers_list,width=62)
hosp_numbers_list<-height(hosp_numbers_list,i=c(1,3,5,7,9,11),height=0.7)
hosp_numbers_list<-height(hosp_numbers_list,i=c(2,4,6,8,10,12),height=0.9)
hosp_numbers_list<-fontsize(x=hosp_numbers_list,i=c(1,3,5,7,9,11),size=23,part="body")
hosp_numbers_list<-fontsize(x=hosp_numbers_list,i=12,size=38,part="body")
hosp_numbers_list<-color(x=hosp_numbers_list,i=11,color="#062a78",part="body")
hospnumbersimg<-save_as_image(hosp_numbers_list,path="../../resources/images/hospnumbers.png",webshot="webshot2")
hospnumbersimg<-readPNG("../../resources/images/hospnumbers.png")
hospnumbers<-rasterGrob(hospnumbersimg)
hosptitleplot<-ggplot()+theme_void()+
annotation_custom(hosptitle,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
hospnumbersplot<-ggplot()+theme_void()+
annotation_custom(hospnumbers,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#hospital plot
hospdaily_weekly_plot<-function(timeframe){
if (timeframe=="Daily"){
latesthosp_date<-max(hosp_nat_tbl$hosp_date,na.rm=TRUE)
latesthosp_average<-hosp_nat_tbl%>%filter(hosp_date==max(hosp_date,na.rm=TRUE))%>%head(1)%>%pull(hosp_avg)
latest_hospavg_format<-latesthosp_average%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
hosplowestavg2021<-hosp_nat_tbl%>%filter(year(hosp_date)==2021)%>%filter(hosp_avg==min(hosp_avg,na.rm=TRUE))%>%head(1)%>%pull(hosp_avg)
hosplowestavg2021date<-hosp_nat_tbl%>%filter(year(hosp_date)==2021)%>%filter(hosp_avg==min(hosp_avg,na.rm=TRUE))%>%head(1)%>%pull(hosp_date)
hosplowestavg2021_format<-hosplowestavg2021%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
hosplowestavg2022<-hosp_nat_tbl%>%filter(year(hosp_date)==2022)%>%filter(hosp_avg==min(hosp_avg,na.rm=TRUE))%>%head(1)%>%pull(hosp_avg)
hosplowestavg2022date<-hosp_nat_tbl%>%filter(year(hosp_date)==2022)%>%filter(hosp_avg==min(hosp_avg,na.rm=TRUE))%>%head(1)%>%pull(hosp_date)
hosplowestavg2022_format<-hosplowestavg2022%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
hospmaxnew<-max(hosp_nat_tbl$hosp_new,na.rm=TRUE)
hospplot<-ggplot(hosp_nat_tbl,aes(hosp_date)) +
geom_col(aes(y=hosp_new, fill = " New Admissions"),color="#B4C7E7") +
geom_col(aes(y={hosplowestavg2021}/800,x={hosplowestavg2021date}),color="black")+
geom_col(aes(y={hosplowestavg2022}/800,x={hosplowestavg2022date}),color="black")+
geom_col(aes(y={latesthosp_average}/700,x={latesthosp_date}),color="red")+
geom_line(aes(y=hosp_avg, color = "7-Day Moving Average - New Admissions"))+
scale_color_manual("",values=c("7-Day Moving Average- New Admissions  "="#757575"))+
scale_fill_manual("",values=c("#B4C7E7"))+
labs(
y     = "New Admissions",
x     = "Date of Report"
) +
annotate("text",x={hosplowestavg2021date},y={hosplowestavg2021}+{hospmaxnew}/1.5,label=glue("2021:\n LOWEST\n AVERAGE\n \n{hosplowestavg2021_format}"),size=2)+
annotate("text",x={hosplowestavg2022date},y={hosplowestavg2022}+{hospmaxnew}/1.2,label=glue("2022:\n LOWEST\n AVERAGE\n \n \n{hosplowestavg2022_format}"),size=2)+
annotate("text",x={latesthosp_date},y={latesthosp_average}+{hospmaxnew}/2,label=glue("LATEST\n AVERAGE\n \n \n{latest_hospavg_format}"),size=2)+
scale_y_continuous(limits=c(0,max(hosp_nat_tbl$hosp_new,na.rm=TRUE)*1.3),labels=label_number(big.mark =","))+
theme(
axis.title=element_text(size=rel(0.6),face="bold"),
axis.text=element_text(size = rel(0.6), face = "bold"),
legend.key.size = unit(0.5, "lines"),
legend.text = element_text(size = rel(0.60), face = "bold"),
legend.position="top")
return(hospplot)}
else if(timeframe=="Weekly") {
hosp_weekly_epicurve <- hosp_nat_tbl%>%
mutate(hosp_cum7 = rollsum(hosp_new,7,align = "right", fill = NA)%>% round(0),
hosp_14avg = rollmean(hosp_new,14,align = "right", fill = NA)%>% round(0)
) %>%filter(wday(hosp_date)==wday(hospend_date_raw))
latesthosp_date<-max(hosp_weekly_epicurve$hosp_date,na.rm=TRUE)
latesthosp_average<-hosp_weekly_epicurve%>%filter(hosp_date==max(hosp_date,na.rm=TRUE))%>%head(1)%>%pull(hosp_14avg)
latest_hospavg_format<-latesthosp_average%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
hosplowestavg2021<-hosp_weekly_epicurve%>%filter(year(hosp_date)==2021)%>%filter(hosp_14avg==min(hosp_14avg,na.rm=TRUE))%>%head(1)%>%pull(hosp_14avg)
hosplowestavg2021date<-hosp_weekly_epicurve%>%filter(year(hosp_date)==2021)%>%filter(hosp_14avg==min(hosp_14avg,na.rm=TRUE))%>%head(1)%>%pull(hosp_date)
hosplowestavg2021_format<-hosplowestavg2021%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
hosplowestavg2022<-hosp_weekly_epicurve%>%filter(year(hosp_date)==2022)%>%filter(hosp_14avg==min(hosp_14avg,na.rm=TRUE))%>%head(1)%>%pull(hosp_14avg)
hosplowestavg2022date<-hosp_weekly_epicurve%>%filter(year(hosp_date)==2022)%>%filter(hosp_14avg==min(hosp_14avg,na.rm=TRUE))%>%head(1)%>%pull(hosp_date)
hosplowestavg2022_format<-hosplowestavg2022%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
hospmaxcum<-max(hosp_weekly_epicurve$hosp_cum7,na.rm=TRUE)
hospplot<-ggplot(hosp_weekly_epicurve,aes(hosp_date))+
geom_col(aes(y=hosp_cum7,fill=" Weekly New Admissions"),color ="#B4C7E7")+
geom_col(aes(y={hosplowestavg2021}/15,x={hosplowestavg2021date}),color="black")+
geom_col(aes(y={hosplowestavg2022}/15,x={hosplowestavg2022date}),color="black")+
geom_col(aes(y={latesthosp_average}/15,x={latesthosp_date}),color="red")+
geom_line(aes(y=hosp_14avg*7,group=1,color="14-Day Moving Average - New Admissions   "),size=1.3)+
scale_color_manual(" ",values=c("14-Day Moving Average - New Admissions   "="#757575"))+
scale_fill_manual(" ",values="#B4C7E7")+
scale_y_continuous(limits=c(0,max(hosp_weekly_epicurve$hosp_cum7,na.rm=TRUE)*1.1),labels = label_number(big.mark = ","))+
labs(
y     = "Weekly New Admissions",
x     = "Date of Report"
) +
annotate("text",x={hosplowestavg2021date},y={hosplowestavg2021}+{hospmaxcum}/1.3,label=glue("2021:\n LOWEST\n AVERAGE\n \n{hosplowestavg2021_format}"),size=2)+
annotate("text",x={hosplowestavg2022date},y={hosplowestavg2022}+{hospmaxcum}/1.2,label=glue("2022:\n LOWEST\n AVERAGE\n \n \n{hosplowestavg2022_format}"),size=2)+
annotate("text",x={latesthosp_date},y={latesthosp_average}+{hospmaxcum}/1.5,label=glue("LATEST\n AVERAGE\n \n \n{latest_hospavg_format}"),size=2)+
theme(
axis.title=element_text(size=rel(0.6),face="bold"),
axis.text=element_text(size = rel(0.6), face = "bold"),
legend.key.size = unit(0.5, "lines"),
legend.text = element_text(size = rel(0.60), face = "bold"),
legend.position="top")
return(hospplot)
}
else if(timeframe=="Monthly") {
hosp_monthly_epicurve <- hosp_nat_tbl%>%
group_by(month=lubridate::floor_date(hosp_date,'month'))%>%mutate(hosp_cummonth=sum(hosp_new))%>%select(month,hosp_cummonth)%>%arrange(month)%>%ungroup()%>%unique()
latestnew_date<-max(hosp_monthly_epicurve$month,na.rm=TRUE)
latesthosp_new<-hosp_monthly_epicurve%>%tail(1)%>%pull(hosp_cummonth)
latest_hospnew_format<-latesthosp_new%>%format(justify="right",big.mark= ",",digits=0,scientific=FALSE)
lowestnew2021<-hosp_monthly_epicurve%>%filter(year(month)==2021)
lowestnew2021min<-min(lowestnew2021$hosp_cummonth,na.rm=TRUE)
lowestnew2021date<-hosp_monthly_epicurve%>%filter(year(month)==2021)%>%filter(hosp_cummonth==lowestnew2021min)%>%head(1)%>%pull(month)
lowestnew2021_format<-lowestnew2021min%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
lowestnew2022<-hosp_monthly_epicurve%>%filter(year(month)==2022)
lowestnew2022min<-min(lowestnew2022$hosp_cummonth,na.rm=TRUE)
lowestnew2022date<-hosp_monthly_epicurve%>%filter(year(month)==2022)%>%filter(hosp_cummonth==lowestnew2022min)%>%head(1)%>%pull(month)
lowestnew2022_format<-lowestnew2022min%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
maxcum<-max(hosp_monthly_epicurve$hosp_cummonth,na.rm=TRUE)
hospplot<-ggplot(hosp_monthly_epicurve)+
geom_col(aes(x=month,y=hosp_cummonth),fill="#B4C7E7")+
geom_col(aes(y={lowestnew2021min}/27,x={lowestnew2021date}),color="black")+
geom_col(aes(y={lowestnew2022min}/27,x={lowestnew2022date}),color="black")+
geom_col(aes(y={latesthosp_new}/27,x={latestnew_date}),color="red")+
labs(
y     = "Monthly New Admissions",
x     = "Month of Report"
) +
scale_fill_manual("",values=c("#B4C7E7"))+
annotate("text",x={lowestnew2021date},y={lowestnew2021min}+{maxcum}/1.8,label=glue("2021:\n LOWEST\n ADMISSIONS\n \n{lowestnew2021_format}"),size=2)+
annotate("text",x={lowestnew2022date},y={lowestnew2022min}+{maxcum}/1.2,label=glue("2022:\n LOWEST\n ADMISSIONS\n \n \n{lowestnew2022_format}"),size=2)+
annotate("text",x={latestnew_date},y={latesthosp_new}+{maxcum}/2,label=glue("LATEST\n ADMISSIONS\n \n{latest_hospnew_format}"),size=2)+
scale_y_continuous(limits=c(0,max(hosp_monthly_epicurve$hosp_cummonth,na.rm=TRUE)*1.3),labels=label_number(big.mark =","))+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.title = element_text(size = rel(1.0), face = "bold"),
axis.title=element_text(size=rel(0.6),face="bold"),
axis.text=element_text(size = rel(0.6), face = "bold"),
legend.key = element_rect(fill = "transparent", colour = NA),
legend.key.size = unit(0.5, "lines"),
legend.text = element_text(size = rel(0.60), face = "bold"),
legend.position="top")
return(hospplot)
}
}
hospplot<-hospdaily_weekly_plot(params$timeframe)
hospbottomplot<-cowplot::plot_grid(hospnumbersplot,hospplot,ncol=2,rel_widths=c(1,1.5))
hospfinalplot<-cowplot::plot_grid(hosptitleplot,hospbottomplot,nrow=2,rel_heights=c(1,3))
hospfinalplot
#set dates
end_date_raw<-max(cases_nat_tbl$cases_date)
end_Bdate<-format(end_date_raw,format="%B %d, %Y")
end_date<-format(end_date_raw,format="%m/%d/%y")
caseend_date_6<- format(end_date_raw-6, format="%m/%d/%y")
caseend_date_7<- format(end_date_raw-7, format="%m/%d/%y")
caseend_date_13<- format(end_date_raw-13, format="%m/%d/%y")
caseend_date_14<- format(end_date_raw-14, format="%m/%d/%y")
caseend_date_27<- format(end_date_raw-27, format="%m/%d/%y")
hospend_date_raw<-max(hosp_nat_tbl$hosp_date,na.rm=TRUE)
hospend_Bdate<-format(hospend_date_raw,format="%B %d, %Y")
hospend_date<-format(hospend_date_raw,format="%m/%d/%y")
hospend_date_6<- format(hospend_date_raw-6, format="%m/%d/%y")
hospend_date_7<- format(hospend_date_raw-7, format="%m/%d/%y")
hospend_date_13<- format(hospend_date_raw-13, format="%m/%d/%y")
hospend_date_14<- format(hospend_date_raw-14, format="%m/%d/%y")
hospend_date_27<- format(hospend_date_raw-27, format="%m/%d/%y")
#set case title
casetitle<-data.frame(title=glue("{params$timeframe} Change in COVID-19 Cases, US"),subtitle=glue("January 22, 2020 - {end_Bdate}"))%>%
pivot_longer( cols = everything(),
names_to = "names",
values_to = "val",
values_transform = list(val = as.character))%>%
select(val)%>%flextable()
#set title format function
titleformat<-function(dataset){
dataset<-hrule(dataset,rule="exact",part="body")
dataset<-height(dataset,height=0.25)
dataset<-width(dataset,width=158)
dataset<-fontsize(x=dataset,i=1,size=27,part="body")
dataset<-fontsize(x=dataset,i=2,size=18,part="body")
dataset<-font(x=dataset,i=2,font="Georgia",part="body")
dataset<-bold(x=dataset,j=1,part="body")
dataset<-color(x=dataset,i=1,j=1,color="white",part="header")
dataset<-color(x=dataset,i=1,color="#041690",part="body")
dataset<-color(x=dataset,i=2,color="black",part="body")
dataset<-align(x=dataset,align="left",part="body")
dataset<-border_remove(dataset)
return(dataset)
}
#format case title
casetitle<-titleformat(casetitle)
#save case title image
casetitleimg<-save_as_image(casetitle,path="../../resources/images/casetitle.png",webshot="webshot2")
casetitleimg<-readPNG("../../resources/images/casetitle.png")
casetitle<-rasterGrob(casetitleimg)
#get case numbers data
cases_numbers <- cases_nat_tbl %>%
mutate(
#the latest 7 days new cases
cases_cum7 = rollsum(cases_new,7,align = "right", fill = NA) ,
#current 7 day average case
cases_7avg = rollmean(cases_new,7,align = "right", fill = NA)%>% round(0),
#prior 7 day average case
cases_prior_7avg=lag(cases_7avg,order_by = cases_date,7)%>% round(0),
#percent change between current 7 day avg case and prior 7 day avg case
cases_7change  = (cases_7avg - cases_prior_7avg)/cases_prior_7avg,
#current 14 day average case
cases_14avg = rollmean(cases_new,14,align = "right", fill = NA)%>% round(0),
#prior 14 day average case
cases_prior_14avg=lag(cases_14avg,order_by = cases_date,14)%>% round(0),
#change between current 14 day avg case and prior 14 day avg case
cases_14change  = (cases_14avg - cases_prior_14avg)/cases_prior_14avg
) %>%
#filter the data to the latest date
filter(cases_date==max(cases_date))%>%
mutate(
#format numbers
cases_cum = cases_cum %>% format(justify = "right", big.mark = ","),
cases_cum7 = cases_cum7 %>% format(justify = "right", big.mark = ","),
cases_new = cases_new%>%format(justify="right",big.mark=","),
cases_7avg=label_number(big.mark=",",accuracy=1)(cases_7avg),
cases_prior_7avg=label_number(big.mark=",",accuracy=1)(cases_prior_7avg),
cases_7change=label_percent(decimal.mark=".",accuracy = .1)(cases_7change),
cases_14avg=label_number(big.mark=",",accuracy=1)(cases_14avg),
cases_prior_14avg=label_number(big.mark=",",accuracy=1)(cases_prior_14avg),
cases_14change=label_percent(decimal.mark=".",accuracy = .1)(cases_14change)
)
#define case numbers function
casedaily_weekly_numbers<-function(timeframe){
#daily case numbers include total cases, daily new cases, current 7 day avg, prior 7 day avg, and change in 7 day avg
if (timeframe=="Daily"){
case_numbers_list<-data.frame(
totalname="TOTAL Cases Reported Since 1/22/20",
totalnumber=cases_numbers$cases_cum,
newname=glue("NEW Cases Reported to CDC on {end_date}"),
newnumber=cases_numbers$cases_new,
changename="Change in 7-Day Case Average",
change=cases_numbers$cases_7change,
averagename=glue("Current 7-Day Case Average ({caseend_date_6} - {end_date})"),
averagenumber=cases_numbers$cases_7avg,
prioraveragename=glue("Prior 7-Day Case Average ({caseend_date_13} - {caseend_date_7})"),
prioraveragenumber=cases_numbers$cases_prior_7avg
)%>%
pivot_longer( cols = everything(),
names_to = "names",
values_to = "val",
values_transform = list(val = as.character))%>%select(val)%>%flextable()
return(case_numbers_list)}
#weekly case numbers include total cases, new cases, current 14 day avg, prior 14 day avg, and change in 14 day avg
else if(timeframe=="Weekly"|timeframe=="Monthly") {
case_numbers_list<-data.frame(
totalname="TOTAL Cases Reported Since 1/22/20",
totalnumber=cases_numbers$cases_cum,
newname=glue("NEW Cases Reported to CDC on {end_date}"),
newnumber=cases_numbers$cases_new,
changename="Change in 14-Day Case Average",
change=cases_numbers$cases_14change,
averagename=glue("Current 14-Day Case Average ({caseend_date_13} - {end_date})"),
averagenumber=cases_numbers$cases_14avg,
prioraveragename=glue("Prior 14-Day Case Average ({caseend_date_27} - {caseend_date_14})"),
prioraveragenumber=cases_numbers$cases_prior_14avg
)%>%
pivot_longer( cols = everything(),
names_to = "names",
values_to = "val",
values_transform = list(val = as.character))%>%select(val)%>%flextable()
return(case_numbers_list)
}
}
#define case numbers format
numberslistformat<-function(dataset){
dataset<-hrule(dataset,rule="exact",part="body")
dataset<-height(dataset,i=c(1,3,5,7,9),height=0.9)
dataset<-height(dataset,i=c(2,4,6,8,10),height=1.1)
dataset<-width(dataset,width=112)
dataset<-fontsize(x=dataset,i=c(1,3,5,7,9),size=29,part="body")
dataset<-fontsize(x=dataset,i=c(2,4,6,8,10),size=36,part="body")
dataset<-color(x=dataset,i=1,j=1,color="white",part="header")
dataset<-color(x=dataset,i=c(1,3,5,7,9),color="#062a78",part="body")
dataset<-bold(x=dataset,j=1,part="body")
dataset<-align(x=dataset,align="left",part="body")
dataset<-border_remove(dataset)
dataset<-bg(x=dataset,j=1,bg="#fff8dc",part="body")
std_border<-fp_border(color="#ba8759",width=2)
dataset<-hline(x=dataset,i=4,border=std_border,part="body")
return (dataset)
}
#get daily or weekly case numbers list
case_numbers_list<-casedaily_weekly_numbers(params$timeframe)
#format case number list
case_numbers_list<-numberslistformat(case_numbers_list)
#save case numbers list
casenumbersimg<-save_as_image(case_numbers_list,path="../../resources/images/casenumbers.png",webshot="webshot2")
casenumbersimg<-readPNG("../../resources/images/casenumbers.png")
casenumbers<-rasterGrob(casenumbersimg)
#get case plot
casedaily_weekly_plot<-function(timeframe){
if (timeframe=="Daily"){
#get the latest case date
latestcase_date<-max(cases_nat_tbl$cases_date,na.rm=TRUE)
#get the 7 day avg on the latest case date
latestcase_average<-cases_nat_tbl%>%filter(cases_date==max(cases_date,na.rm=TRUE))%>%head(1)%>%pull(cases_avg)
#format the 7 day avg on the latest case date
latest_caseavg_format<-latestcase_average%>%format(big.mark  = ",",digits   = 0,scientific=FALSE)
#get the lowest 7 day avg of 2021
lowestavg2021<-cases_nat_tbl%>%filter(year(cases_date)==2021)%>%filter(cases_avg==min(cases_avg,na.rm=TRUE))%>%head(1)%>%pull(cases_avg)
#get the date of the lowest 7 day avg in 2021
lowestavg2021date<-cases_nat_tbl%>%filter(year(cases_date)==2021)%>%filter(cases_avg==min(cases_avg,na.rm=TRUE))%>%head(1)%>%pull(cases_date)
#format the lowest 7 day avg of 2021
lowestavg2021_format<-lowestavg2021%>%format(big.mark  = ",",digits   = 0,scientific=FALSE)
#get the lowest 7 day avg of 2022
lowestavg2022<-cases_nat_tbl%>%filter(year(cases_date)==2022)%>%filter(cases_avg==min(cases_avg,na.rm=TRUE))%>%head(1)%>%pull(cases_avg)
#get the date of the lowest 7 day avg of 2022
lowestavg2022date<-cases_nat_tbl%>%filter(year(cases_date)==2022)%>%filter(cases_avg==min(cases_avg,na.rm=TRUE))%>%head(1)%>%pull(cases_date)
#format the lowest 7 day avg of 2022
lowestavg2022_format<-lowestavg2022%>%format(big.mark  = ",",digits   = 0,scientific=FALSE)
#get the maximal daily new cases
maxnew<-max(cases_nat_tbl$cases_new,na.rm=TRUE)
#plot daily cases
caseplot<-ggplot(cases_nat_tbl,aes(cases_date)) +
geom_col(aes(y=cases_new, fill = " New Cases"),color="#B4C7E7") +
#add the black line of the lowest 7 day avg of 2021
geom_col(aes(y={lowestavg2021}/800,x={lowestavg2021date}),color="black")+
#add the black line of the lowest 7 day avg of 2022
geom_col(aes(y={lowestavg2022}/980,x={lowestavg2022date}),color="black")+
#add the red line of the latest 7 day avg
geom_col(aes(y={latestcase_average}/980,x={latestcase_date}),color="red")+
#add the 7 day avg line
geom_line(aes(y=cases_avg, color = "7-Day Moving Average - New Cases"))+
#set color of the 7 day avg line
scale_color_manual("",values=c("7-Day Moving Average- New Cases  "="#757575"))+
#set color of daily cases column
scale_fill_manual("",values=c("#B4C7E7"))+
#set axis title
labs(y     = "New Cases",
x     = "Date of Report") +
#add annotation of the lowest 7 day avg of 2021
annotate("text",x={lowestavg2021date},y={lowestavg2021}+{maxnew}/2,label=glue("2021:\n LOWEST\n AVERAGE\n \n{lowestavg2021_format}"),size=2)+
#add annotation of the lowest 7 day avg of 2022
annotate("text",x={lowestavg2022date},y={lowestavg2022}+{maxnew}/1.2,label=glue("2022:\n LOWEST\n AVERAGE\n \n \n{lowestavg2022_format}"),size=2)+
#add annotation of the latest 7 day avg
annotate("text",x={latestcase_date},y={latestcase_average}+{maxnew}/2,label=glue("LATEST\n AVERAGE\n \n{latest_caseavg_format}"),size=2)+
#set the y axis maximal
scale_y_continuous(limits=c(0,max(cases_nat_tbl$cases_new,na.rm=TRUE)*1.3),labels=label_number(big.mark =","))+
#set theme
theme(
axis.title=element_text(size=rel(0.6),face="bold"),
axis.text=element_text(size = rel(0.6), face = "bold"),
legend.key.size = unit(0.5, "lines"),
legend.text = element_text(size = rel(0.60), face = "bold"),
legend.position="top")
return(caseplot)}
else if(timeframe=="Weekly") {
#get case weekly data and
case_weekly_epicurve <- cases_nat_tbl%>%
mutate(cases_cum7 = rollsum(cases_new,7,align = "right", fill = NA)%>% round(0),
cases_14avg = rollmean(cases_new,14,align = "right", fill = NA)%>% round(0)
) %>%filter(wday(cases_date)==wday(end_date_raw))
#get the latest case date
latestcase_date<-max(case_weekly_epicurve$cases_date,na.rm=TRUE)
#get the 14 day average on the latest date
latestcase_average<-case_weekly_epicurve%>%filter(cases_date==max(cases_date,na.rm=TRUE))%>%head(1)%>%pull(cases_14avg)
#format the 14 day average on the latest date
latest_caseavg_format<-latestcase_average%>%format(justify="right",big.mark= ",",digits=0,scientific=FALSE)
#get the lowest 14 day average of 2021
lowestavg2021<-case_weekly_epicurve%>%filter(year(cases_date)==2021)%>%filter(cases_14avg==min(cases_14avg,na.rm=TRUE))%>%head(1)%>%pull(cases_14avg)
#get the date of the lowest 14 day average of 2021
lowestavg2021date<-case_weekly_epicurve%>%filter(year(cases_date)==2021)%>%filter(cases_14avg==min(cases_14avg,na.rm=TRUE))%>%head(1)%>%pull(cases_date)
#format the lowest 14 day average of 2021
lowestavg2021_format<-lowestavg2021%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
#get the lowest 14 day average of 2022
lowestavg2022<-case_weekly_epicurve%>%filter(year(cases_date)==2022)%>%filter(cases_14avg==min(cases_14avg,na.rm=TRUE))%>%head(1)%>%pull(cases_14avg)
#get the date of the lowest 14 day average of 2022
lowestavg2022date<-case_weekly_epicurve%>%filter(year(cases_date)==2022)%>%filter(cases_14avg==min(cases_14avg,na.rm=TRUE))%>%head(1)%>%pull(cases_date)
#format the lowest 14 day average of 2022
lowestavg2022_format<-lowestavg2022%>%format(big.mark  = ",",digits   = 0,scientific=FALSE)
#get the maximal of weekly cases
maxcum<-max(case_weekly_epicurve$cases_cum7,na.rm=TRUE)
#plot weekly case epicurve
caseplot<-ggplot(case_weekly_epicurve )+
geom_col(aes(y=cases_cum7,x=cases_date,fill=" Weekly New Cases"),color="#B4C7E7")+
#add the black line of the lowest 14 day avg of 2021
geom_col(aes(y={lowestavg2021}/17,x={lowestavg2021date}),color="black")+
#add the black line of the lowest 7 day avg of 2022
geom_col(aes(y={lowestavg2022}/17,x={lowestavg2022date}),color="black")+
#add the red line of the latest 7 day avg of 2021
geom_col(aes(y={latestcase_average}/17,x={latestcase_date}),color="red")+
#add the 14 day avg line
geom_line(aes(y=cases_14avg*7,x=cases_date,group=1,color="14-Day Moving Average- New Cases    "),size=1.3)+
#set the color of 14 day avg line
scale_color_manual(" ",values=c("14-Day Moving Average- New Cases    "="#757575"))+
#set the color of weekly cases column
scale_fill_manual(" ",values="#B4C7E7")+
#set the axis title
labs(y     = "Weekly New Cases",
x     = "Date of Report" ) +
#add annotation of the lowest 14 day avg of 2021
annotate("text",x={lowestavg2021date},y={lowestavg2021}+{maxcum}/2,label=glue("2021:\n LOWEST\n AVERAGE\n \n{lowestavg2021_format}"),size=2)+
#add annotation of the lowest 14 day avg of 2022
annotate("text",x={lowestavg2022date},y={lowestavg2022}+{maxcum}/1,label=glue("2022:\n LOWEST\n AVERAGE\n \n \n{lowestavg2022_format}"),size=1.8)+
#add annotation of the latest 14 day avg
annotate("text",x={latestcase_date},y={latestcase_average}+{maxcum}/2,label=glue("LATEST\n AVERAGE\n \n{latest_caseavg_format}"),size=2)+
#set maximal value of y axis
scale_y_continuous(limits=c(0,max(case_weekly_epicurve$cases_cum7,na.rm=TRUE)*1.3),labels=label_number(big.mark =","))+
#set theme
theme(axis.title=element_text(size=rel(0.6),face="bold"),
axis.text=element_text(size = rel(0.6), face = "bold"),
legend.key.size = unit(0.5, "lines"),
legend.text = element_text(size = rel(0.60), face = "bold"),
legend.position="top")
return(caseplot)
}
else if(timeframe=="Monthly") {
#get monthly case data
case_monthly_epicurve <- cases_nat_tbl%>%
group_by(month=lubridate::floor_date(cases_date,'month'))%>%
mutate(cases_cummonth=sum(cases_new))%>%select(month,cases_cummonth)%>%
arrange(month)%>%ungroup()%>%unique()
#get the latest month
latestnew_date<-max(case_monthly_epicurve$month,na.rm=TRUE)
#get the montly cases in the latest month
latestcase_new<-case_monthly_epicurve%>%tail(1)%>%pull(cases_cummonth)
#format the montly cases in the latest month
latest_casenew_format<-latestcase_new%>%format(justify="right",big.mark= ",",digits=0,scientific=FALSE)
#get the lowest monthly cases in 2021
lowestnew2021min<-case_monthly_epicurve%>%filter(year(month)==2021)%>%
filter(cases_cummonth==min(cases_cummonth,na.rm=TRUE))%>%head(1)%>%
pull(cases_cummonth)
#get the month of the lowest monthly cases in 2021
lowestnew2021date<-case_monthly_epicurve%>%filter(year(month)==2021)%>%filter(cases_cummonth==lowestnew2021min,na.rm=TRUE)%>%head(1)%>%pull(month)
#format the lowest monthly cases in 2021
lowestnew2021_format<-lowestnew2021min%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
#get the lowest monthly cases in 2022
lowestnew2022min<-case_monthly_epicurve%>%filter(year(month)==2022)%>%filter(cases_cummonth==min(cases_cummonth,na.rm=TRUE))%>%head(1)%>%pull(cases_cummonth)
#get the month of the lowest monthly cases in 2022
lowestnew2022date<-case_monthly_epicurve%>%filter(year(month)==2022)%>%filter(cases_cummonth==lowestnew2022min,na.rm=TRUE)%>%head(1)%>%pull(month)
#format the lowest monthly cases in 2022
lowestnew2022_format<-lowestnew2022min%>%format(justify = "right",big.mark  = ",",digits   = 0,scientific=FALSE)
#get the maximal monthly cases
maxcum<-max(case_monthly_epicurve$cases_cummonth,na.rm=TRUE)
#plot monthly cases
caseplot<-ggplot(case_monthly_epicurve)+
geom_col(aes(x=month,y=cases_cummonth),fill="#B4C7E7")+
#add the black line of the lowest monthly cases of 2021
geom_col(aes(y={lowestnew2021min}/38,x={lowestnew2021date}),color="black")+
#add the black line of the lowest monthly cases of 2022
geom_col(aes(y={lowestnew2022min}/37,x={lowestnew2022date}),color="black")+
#add the red line of the latest monthly cases
geom_col(aes(y={latestcase_new}/35,x={latestnew_date}),color="red")+
#set axis title
labs(y     = "Monthly New Cases",
x     = "Month of Report") +
#set the color of the monthly cases column
scale_fill_manual("",values=c("#B4C7E7"))+
#add annotation of the lowest monthly cases of 2021
annotate("text",x={lowestnew2021date},y={lowestnew2021min}+{maxcum}/2,label=glue("2021:\n LOWEST\n CASES\n \n{lowestnew2021_format}"),size=2)+
#add annotation of the lowest monthly cases of 2022
annotate("text",x={lowestnew2022date},y={lowestnew2022min}+{maxcum}/1.1,label=glue("2022:\n LOWEST\n CASES\n \n \n{lowestnew2022_format}"),size=2)+
#add annotation of the latest monthly cases
annotate("text",x={latestnew_date},y={latestcase_new}+{maxcum}/2,label=glue("LATEST\n CASES\n \n{latest_casenew_format}"),size=2)+
#set the maximal value of y axis
scale_y_continuous(limits=c(0,max(case_monthly_epicurve$cases_cummonth,na.rm=TRUE)*1.3),labels=label_number(big.mark =","))+
#set theme
theme(axis.title=element_text(size=rel(0.6),face="bold"),
axis.text=element_text(size = rel(0.6), face = "bold"),
legend.key.size = unit(0.5, "lines"),
legend.text = element_text(size = rel(0.60), face = "bold"),
legend.position="top")
return(caseplot)
}
}
#plot daily, weekly, or monthy case plot
caseplot<-casedaily_weekly_plot(params$timeframe)
#ggplot case title
casetitleplot<-ggplot()+theme_void()+
annotation_custom(casetitle,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#ggplot case numbers
casenumbersplot<-ggplot()+theme_void()+
annotation_custom(casenumbers,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#combine plots
casebottomplot<-cowplot::plot_grid(casenumbersplot,caseplot,ncol=2,rel_widths=c(1,1.5))
casefinalplot<-cowplot::plot_grid(casetitleplot,casebottomplot,nrow=2,rel_heights=c(1,3))
casefinalplot
install.packages("shinythemes")
_quarto.yml
quarto.yml
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
rsconnect::deployApp()
shiny::runApp()
