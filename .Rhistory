mutate(juris = case_when(
juris == "MP" ~ "CNMI",
juris == "VI" ~ "USVI",
juris == "MH" ~ "RMI",
TRUE ~ juris))|>  right_join(pop, by = c("state" = "juris"))|>  View()
TRUE ~ juris))|>  right_join(pop|>  View()
regions |>  rename(juris = state) |>
mutate(juris = case_when(
juris == "MP" ~ "CNMI",
juris == "VI" ~ "USVI",
juris == "MH" ~ "RMI",
TRUE ~ juris)) |>  right_join(pop)|>  View()
regions |>  rename(juris = state) |>
mutate(juris = case_when(
juris == "MP" ~ "CNMI",
juris == "VI" ~ "USVI",
juris == "MH" ~ "RMI",
TRUE ~ juris)) |>  right_join(pop)|>
mutate(regions = case_when(
juris == "NYC"  ~ "Region 2",
juris == "NYX"  ~ "Region 2",
juris == "FSM" ~ "Region 9",
juris == "RMI" ~ "Region 9",
juris == "PW" ~ "Region 9"
)) |> View()
regions |>  rename(juris = state) |>
mutate(juris = case_when(
juris == "MP" ~ "CNMI",
juris == "VI" ~ "USVI",
juris == "MH" ~ "RMI",
TRUE ~ juris)) |>  right_join(pop)|>
mutate(fema_region = case_when(
juris == "NYC"  ~ "Region 2",
juris == "NYX"  ~ "Region 2",
juris == "FSM" ~ "Region 9",
juris == "RMI" ~ "Region 9",
juris == "PW" ~ "Region 9"
)) |> View()
regions |>  rename(juris = state) |>
mutate(juris = case_when(
juris == "MP" ~ "CNMI",
juris == "VI" ~ "USVI",
juris == "MH" ~ "RMI",
TRUE ~ juris)) |>  right_join(pop)|>
mutate(fema_region = case_when(
juris == "NYC"  ~ "Region 2",
juris == "NYX"  ~ "Region 2",
juris == "FSM" ~ "Region 9",
juris == "RMI" ~ "Region 9",
juris == "PW" ~ "Region 9",
TRUE ~ fema_region
)) |> View()
regions |>  rename(juris = state) |>
mutate(juris = case_when(
juris == "MP" ~ "CNMI",
juris == "VI" ~ "USVI",
juris == "MH" ~ "RMI",
TRUE ~ juris)) |>  right_join(pop)|>
mutate(fema_region = case_when(
juris == "NYC"  ~ "Region 2",
juris == "NYX"  ~ "Region 2",
juris == "FSM" ~ "Region 9",
juris == "RMI" ~ "Region 9",
juris == "PW" ~ "Region 9",
TRUE ~ fema_region
)) |> write_rds(here::here("data/pop.rds"))
pop <- readRDS("C:/Users/ovt1/Desktop/SAreportR/data/pop.rds")
View(pop)
pop <-  readr::read_rds(here::here("data/pop.rds"))
readr::read_csv(paste0(
"C:/Users/",
'ovt1',
"/CDC/Situational Awareness COVID-19 Response - WORKING FOLDER/DOMESTIC CASE COUNTS/US CASE COUNTS SPREADSHEET/CDC Final US Case Counts/final_counts_check.csv"),
guess_max = 3000,
show_col_types = FALSE)  |>
clean_raw_data(date_column = date_column,
state_abbr  = state_abbr,
lag         = lag,
start_date  = start_date)|>
select(state_name,
juris,
date,
tot_cases,
New_case,
tot_death,
new_death) |>
mutate(juris = if_else(juris == "NY", "NYX", juris)) |>
left_join(pop) |>
group_by(date, fema_region) |>
summarise(cases_cum  = sum(tot_cases),
cases_new  = sum(New_case),
deaths_cum = sum(tot_death),
deaths_new = sum(new_death)
) |>
ungroup()
library(tidyverse)
library(flextable)
devtools::load_all()
theme_set(theme_classic())
readr::read_csv(paste0(
"C:/Users/",
'ovt1',
"/CDC/Situational Awareness COVID-19 Response - WORKING FOLDER/DOMESTIC CASE COUNTS/US CASE COUNTS SPREADSHEET/CDC Final US Case Counts/final_counts_check.csv"),
guess_max = 3000,
show_col_types = FALSE)  |>
clean_raw_data(date_column = date_column,
state_abbr  = state_abbr,
lag         = lag,
start_date  = start_date)|>
select(state_name,
juris,
date,
tot_cases,
New_case,
tot_death,
new_death) |>
mutate(juris = if_else(juris == "NY", "NYX", juris)) |>
left_join(pop) |>
group_by(date, fema_region) |>
summarise(cases_cum  = sum(tot_cases),
cases_new  = sum(New_case),
deaths_cum = sum(tot_death),
deaths_new = sum(new_death)
) |>
ungroup()
readr::read_csv(paste0(
"C:/Users/",
'ovt1',
"/CDC/Situational Awareness COVID-19 Response - WORKING FOLDER/DOMESTIC CASE COUNTS/US CASE COUNTS SPREADSHEET/CDC Final US Case Counts/final_counts_check.csv"),
guess_max = 3000,
show_col_types = FALSE)  |>
clean_raw_data(date_column = "submission_date",
state_abbr  = "state_abbr",
lag         = 0,
start_date  = "2020-01-01")|>
select(state_name,
juris,
date,
tot_cases,
New_case,
tot_death,
new_death) |>
mutate(juris = if_else(juris == "NY", "NYX", juris)) |>
left_join(pop) |>
group_by(date, fema_region) |>
summarise(cases_cum  = sum(tot_cases),
cases_new  = sum(New_case),
deaths_cum = sum(tot_death),
deaths_new = sum(new_death)
) |>
ungroup()
readr::read_csv(paste0(
"C:/Users/",
'ovt1',
"/CDC/Situational Awareness COVID-19 Response - WORKING FOLDER/DOMESTIC CASE COUNTS/US CASE COUNTS SPREADSHEET/CDC Final US Case Counts/final_counts_check.csv"),
guess_max = 3000,
show_col_types = FALSE)  |>
clean_raw_data(date_column = "submission_date",
state_abbr  = "state_abbr",
lag         = 0,
start_date  = "2020-01-01")|>
select(state_name,
juris,
date,
tot_cases,
New_case,
tot_death,
new_death) |>
mutate(juris = if_else(juris == "NY", "NYX", juris)) |>
left_join(pop) |>
group_by(date, fema_region) |>
summarise(cases_cum  = sum(tot_cases),
cases_new  = sum(New_case),
deaths_cum = sum(tot_death),
deaths_new = sum(new_death),
pop        = sum(pop)
) |>
ungroup() |>
group_by(fema_region) |>
mutate(
cases_avg           = get_mean(cases_new) |> round(),
deaths_avg          = get_mean(deaths_new)|> round(),
cases_7cum          = get_juris_7day_cum_per_100k(cases_new, pop = pop),
deaths_7cum         = get_juris_7day_cum_per_100k(deaths_new,pop = pop),
cases_change        = get_per_change(cases_avg, date),
deaths_change       = get_per_change(deaths_avg, date),
cases_avg_per_100k  = (cases_avg/pop) * 100000,
deaths_avg_per_100k = (deaths_avg/pop)* 100000
)|>
ungroup()
# case and death data
region_case <-     readr::read_csv(paste0(
"C:/Users/",
'ovt1',
"/CDC/Situational Awareness COVID-19 Response - WORKING FOLDER/DOMESTIC CASE COUNTS/US CASE COUNTS SPREADSHEET/CDC Final US Case Counts/final_counts_check.csv"),
guess_max = 3000,
show_col_types = FALSE)  |>
clean_raw_data(date_column = "submission_date",
state_abbr  = "state_abbr",
lag         = 0,
start_date  = "2020-01-01")|>
select(state_name,
juris,
date,
tot_cases,
New_case,
tot_death,
new_death) |>
mutate(juris = if_else(juris == "NY", "NYX", juris)) |>
left_join(pop) |>
group_by(date, fema_region) |>
summarise(cases_cum  = sum(tot_cases),
cases_new  = sum(New_case),
deaths_cum = sum(tot_death),
deaths_new = sum(new_death),
pop        = sum(pop)
) |>
ungroup() |>
group_by(fema_region) |>
mutate(
cases_avg           = get_mean(cases_new) |> round(),
deaths_avg          = get_mean(deaths_new)|> round(),
cases_7cum          = get_juris_7day_cum_per_100k(cases_new, pop = pop),
deaths_7cum         = get_juris_7day_cum_per_100k(deaths_new,pop = pop),
cases_change        = get_per_change(cases_avg, date),
deaths_change       = get_per_change(deaths_avg, date),
cases_avg_per_100k  = (cases_avg/pop) * 100000,
deaths_avg_per_100k = (deaths_avg/pop)* 100000
)|>
ungroup() |>
# mutate(across(!ends_with("change"), ~ format(.x,
#                                              justify = "right",
#                                              big.mark   = ","))) |>
mutate(cases_date  = date,
deaths_date = date,
juris = juris |> stringr::str_trim()) |>
select(-date)
# case and death data
region_case <-     readr::read_csv(paste0(
"C:/Users/",
'ovt1',
"/CDC/Situational Awareness COVID-19 Response - WORKING FOLDER/DOMESTIC CASE COUNTS/US CASE COUNTS SPREADSHEET/CDC Final US Case Counts/final_counts_check.csv"),
guess_max = 3000,
show_col_types = FALSE)  |>
clean_raw_data(date_column = "submission_date",
state_abbr  = "state_abbr",
lag         = 0,
start_date  = "2020-01-01")|>
select(state_name,
juris,
date,
tot_cases,
New_case,
tot_death,
new_death) |>
mutate(juris = if_else(juris == "NY", "NYX", juris)) |>
left_join(pop) |>
group_by(date, fema_region) |>
summarise(cases_cum  = sum(tot_cases),
cases_new  = sum(New_case),
deaths_cum = sum(tot_death),
deaths_new = sum(new_death),
pop        = sum(pop)
) |>
ungroup() |>
group_by(fema_region) |>
mutate(
cases_avg           = get_mean(cases_new) |> round(),
deaths_avg          = get_mean(deaths_new)|> round(),
cases_7cum          = get_juris_7day_cum_per_100k(cases_new, pop = pop),
deaths_7cum         = get_juris_7day_cum_per_100k(deaths_new,pop = pop),
cases_change        = get_per_change(cases_avg, date),
deaths_change       = get_per_change(deaths_avg, date),
cases_avg_per_100k  = (cases_avg/pop) * 100000,
deaths_avg_per_100k = (deaths_avg/pop)* 100000
)|>
ungroup() |>
# mutate(across(!ends_with("change"), ~ format(.x,
#                                              justify = "right",
#                                              big.mark   = ","))) |>
mutate(cases_date  = date,
deaths_date = date) |>
select(-date)
View(region_case)
#' @param username cpu username of user compiling the report.
#' @param date_column name of date column to be renamed
#' @param state_abbr name of column with state and territory abbreviations to be renamed and standardize abbreviations
#' @param start_date first day date to filter
#' @param lag number of days to remove from the most recent date
#' @return returns aggregate case and death table with metrics
#' @export
#' @import dplyr
#'
#' @examples
get_case_death_reg_tbl <- function(username,
date_column = "submission_date",
state_abbr  = "state_abbr",
lag         = 0,
start_date  = "2020-01-01"){
pop <-  readr::read_rds(here::here("data/pop.rds"))
# case and death data
readr::read_csv(paste0(
"C:/Users/",
username,
"/CDC/Situational Awareness COVID-19 Response - WORKING FOLDER/DOMESTIC CASE COUNTS/US CASE COUNTS SPREADSHEET/CDC Final US Case Counts/final_counts_check.csv"),
guess_max = 3000,
show_col_types = FALSE)  |>
clean_raw_data(date_column = date_column,
state_abbr  = state_abbr,
lag         = lag,
start_date  = start_date)|>
select(state_name,
juris,
date,
tot_cases,
New_case,
tot_death,
new_death) |>
mutate(juris = if_else(juris == "NY", "NYX", juris)) |>
left_join(pop) |>
group_by(date, fema_region) |>
summarise(cases_cum  = sum(tot_cases),
cases_new  = sum(New_case),
deaths_cum = sum(tot_death),
deaths_new = sum(new_death),
pop        = sum(pop)
) |>
ungroup() |>
group_by(fema_region) |>
mutate(
cases_avg           = get_mean(cases_new) |> round(),
deaths_avg          = get_mean(deaths_new)|> round(),
cases_7cum          = get_juris_7day_cum_per_100k(cases_new, pop = pop),
deaths_7cum         = get_juris_7day_cum_per_100k(deaths_new,pop = pop),
cases_change        = get_per_change(cases_avg, date),
deaths_change       = get_per_change(deaths_avg, date),
cases_avg_per_100k  = (cases_avg/pop) * 100000,
deaths_avg_per_100k = (deaths_avg/pop)* 100000
)|>
ungroup() |>
# mutate(across(!ends_with("change"), ~ format(.x,
#                                              justify = "right",
#                                              big.mark   = ","))) |>
mutate(cases_date  = date,
deaths_date = date,
juris = juris |> stringr::str_trim()) |>
select(-date)
}
get_case_death_reg_tbl(username = params$username)
#' @param username cpu username of user compiling the report.
#' @param date_column name of date column to be renamed
#' @param state_abbr name of column with state and territory abbreviations to be renamed and standardize abbreviations
#' @param start_date first day date to filter
#' @param lag number of days to remove from the most recent date
#' @return returns aggregate case and death table with metrics
#' @export
#' @import dplyr
#'
#' @examples
get_case_death_reg_tbl <- function(username,
date_column = "submission_date",
state_abbr  = "state_abbr",
lag         = 0,
start_date  = "2020-01-01"){
pop <-  readr::read_rds(here::here("data/pop.rds"))
# case and death data
readr::read_csv(paste0(
"C:/Users/",
username,
"/CDC/Situational Awareness COVID-19 Response - WORKING FOLDER/DOMESTIC CASE COUNTS/US CASE COUNTS SPREADSHEET/CDC Final US Case Counts/final_counts_check.csv"),
guess_max = 3000,
show_col_types = FALSE)  |>
clean_raw_data(date_column = date_column,
state_abbr  = state_abbr,
lag         = lag,
start_date  = start_date)|>
select(state_name,
juris,
date,
tot_cases,
New_case,
tot_death,
new_death) |>
mutate(juris = if_else(juris == "NY", "NYX", juris)) |>
left_join(pop) |>
group_by(date, fema_region) |>
summarise(cases_cum  = sum(tot_cases),
cases_new  = sum(New_case),
deaths_cum = sum(tot_death),
deaths_new = sum(new_death),
pop        = sum(pop)
) |>
ungroup() |>
group_by(fema_region) |>
mutate(
cases_avg           = get_mean(cases_new) |> round(),
deaths_avg          = get_mean(deaths_new)|> round(),
cases_7cum          = get_juris_7day_cum_per_100k(cases_new, pop = pop),
deaths_7cum         = get_juris_7day_cum_per_100k(deaths_new,pop = pop),
cases_change        = get_per_change(cases_avg, date),
deaths_change       = get_per_change(deaths_avg, date),
cases_avg_per_100k  = (cases_avg/pop) * 100000,
deaths_avg_per_100k = (deaths_avg/pop)* 100000
)|>
ungroup() |>
# mutate(across(!ends_with("change"), ~ format(.x,
#                                              justify = "right",
#                                              big.mark   = ","))) |>
mutate(cases_date  = date,
deaths_date = date) |>
select(-date)
}
get_case_death_reg_tbl(username = params$username)
pop <- readr::read_rds(here::here("data/pop.rds"))
read_csv(paste0("C:/Users/",
"ovt1",
"/CDC/Situational Awareness COVID-19 Response - WORKING FOLDER/HOSPITAL DATA/hospitals_region_daily_incident_management.csv"),
guess_max = 3000,
show_col_types = FALSE)  |>
clean_raw_data(date_column = "collection_date",
state_abbr  = 'state',
lag         = 2,
start_date  = "2020-01-01") |>
select(juris,
date,
adm_all_covid_confirmed,
avg_adm_all_covid_confirmed
) |>
left_join(pop) |>
group_by(fema_region) |>
mutate(hosp_adm    = adm_all_covid_confirmed,
hosp_cum    = cumsum(hosp_adm),
hosp_avg    = avg_adm_all_covid_confirmed |> round(),
hosp_new    = adm_all_covid_confirmed,
pop         = sum(pop)) |>
group_by(date,fema_region) |>
summarise(
hosp_cum = hosp_cum %>% format(justify  = "right",
big.mark = ","),
hosp_new = hosp_new,
hosp_avg = hosp_avg
) |>
ungroup() |>
group_by(fema_region) |>
mutate(
hosp_change = get_per_change(hosp_avg, date),
hosp_7cum   = get_juris_7day_cum_per_100k(hosp_new, pop = pop)
) |>
ungroup() |>
rename(hosp_date = date)
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop |> group_by(fema_region) |> summarise(pop = sum(pop))
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop |> group_by(fema_region) |> summarise(pop = sum(pop))
pop
pop |> group_by(fema_region)
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop |> group_by(fema_region) |> mutate(pop = sum(pop))
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop |>
group_by(fema_region) |>
filter(pop = max(pop))
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop |>
group_by(fema_region) |>
dplyr::filter(pop = max(pop))
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop |>
group_by(fema_region) %>%
dplyr::filter(pop = max(pop))
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop  %>%
group_by(fema_region) %>%
dplyr::filter(pop = max(pop))
start_date  = "2020-01-01"){
pop <- readr::read_rds(here::here("data/pop.rds")) |>
%>%
pop <- readr::read_rds(here::here("data/pop.rds")) |>
group_by(pop,fema_region) %>%
dplyr::filter(pop = max(pop))
pop <- readr::read_rds(here::here("data/pop.rds")) |>
group_by(pop,fema_region) %>%
dplyr::summarise(pop = sum(pop))
pop <- readr::read_rds(here::here("data/pop.rds")) |>
group_by(pop,fema_region) %>%
dplyr::summarise(pop = sum(pop)) |>
View()
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop |>
group_by(fema_region) %>%
dplyr::summarise(pop = sum(pop)) |>
View()
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop |>
dplyr::group_by(fema_region) %>%
dplyr::summarise(pop = sum(pop)) |>
View()
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop %$%
dplyr::group_by(fema_region) %>%
dplyr::summarise(pop = sum(pop)) |>
View()
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop %$%
dplyr::group_by(fema_region) %$%
dplyr::summarise(pop = sum(pop)) |>
View()
pop <- readr::read_rds(here::here("data/pop.rds")) |>
pop %$%
dplyr::group_by(fema_region) %$%
dplyr::summarise(pop = sum(pop)) %$%
View()
