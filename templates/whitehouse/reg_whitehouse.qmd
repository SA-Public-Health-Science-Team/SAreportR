---
title: "State of the Pandemic"
subtitle: "Dr. Rochelle P. Walensky"
editor: visual
execute:
  echo: false
  warning: false
  
output:
  word_document: default
  
  html_document:
    df_print: paged
  
format: html
params:
  refreshData: true
  timeframe: Daily
  username: thq5
  region: 1
  forecastnumber: 1,076,000 to 1,082,000
  forecastdate: 11/26/22
---

```{r setup, warning=FALSE, message=FALSE, echo=FALSE}
library(tidyverse)
library(flextable)
library(zoo)
library(scales)
library(officer)
library(png)
library(readxl)
library(lubridate)
library(ggthemes)
library(grid)
library(gridExtra)
library(readr)
library(DBI)
library(glue)
library(ggplot2)
library(maps)
library(mapdata)
library(usmap)
library(rlang)
devtools::load_all()
theme_set(theme_classic())

```

```{r map,warning=FALSE, message=FALSE, echo=FALSE}
#| column: margin


region_us_map<-plot_region_us_map()

region_map<-plot_region_map(params$region)
```

```{r warning=FALSE, message=FALSE, echo=FALSE}

region_us_map
region_map
```

```{r refresh-data,eval = params$refreshData, warning=FALSE, message=FALSE, echo=FALSE}

get_case_death_reg_tbl(username = params$username) |> write_rds(here::here("data/case_death_reg_tbl.rds"))

get_hosp_reg_tbl(username = params$username) |> write_rds(here::here("data/hosp_reg_tbl.rds"))

get_lab_reg_tbl(username = params$username)|> write_rds(here::here("data/lab_reg_tbl.rds"))

```

```{r load_data,warning=FALSE, message=FALSE, echo=FALSE}
case_reg_tbl  <- read_rds(here::here("data/case_death_reg_tbl.rds")) |> 
                            strip_region() |> 
                            filter(fema_region == params$region) |> 
                            select(!contains("deaths"))

death_reg_tbl <- read_rds(here::here("data/case_death_reg_tbl.rds"))|> 
                            strip_region() |> 
                            filter(fema_region == params$region) |>  
                            select(!contains("cases"))
hosp_reg_tbl  <- read_rds(here::here("data/hosp_reg_tbl.rds"))|> 
                            strip_region() |> 
                            filter(fema_region == params$region)

lab_reg_tbl   <- read_rds(here::here("data/lab_reg_tbl.rds"))|> 
                            strip_region() |> 
                            filter(fema_region == params$region)
```

```{r caseplot, warning=FALSE, message=FALSE, echo=FALSE}
#get case dates
end_date_raw<-max(case_reg_tbl$cases_date)
end_Bdate<-format(end_date_raw,format="%B %d, %Y")
end_date<-format(end_date_raw,format="%m/%d/%y")

#set case title
casetitle<-data.frame(title=if_else(params$timeframe=="Monthly",glue("Monthly Change in COVID-19 Cases, Region {params$region}"), glue("Weekly Change in COVID-19 Cases, Region {params$region}")),subtitle=glue("January 22, 2020 - {end_Bdate}"))%>%
pivot_longer( cols = everything(),
                 names_to = "names",
                values_to = "val", 
               values_transform = list(val = as.character))%>%
select(val)%>%flextable()

#format case title
casetitle<-title_format_wh(casetitle)

#save case title image
casetitleimg<-save_as_image(casetitle,path="../../resources/images/casetitle.png",webshot="webshot2")
casetitleimg<-readPNG("../../resources/images/casetitle.png")
casetitle<-rasterGrob(casetitleimg)

#set case numbers
cases_epicurve <- case_reg_tbl %>% 
mutate(
    #21 day avg case
cases_avg=cases_new/7%>% round(0),
    #prior 21 day avg case
cases_prior_avg=lag(cases_new,order_by = cases_date,1)/7%>% round(0),
    #percent change of 21 day avg
cases_change  = (cases_avg - cases_prior_avg)/cases_prior_avg
       )

cases_numbers<-cases_epicurve%>%  filter(cases_date==max(cases_date))%>%
mutate(
    #format numbers
cases_cum = cases_cum %>% format(justify = "right", big.mark = ","),
cases_new = cases_new%>%format(justify="right",big.mark=","),
cases_avg=label_number(big.mark=",",accuracy=1)(cases_avg),
cases_prior_avg=label_number(big.mark=",",accuracy=1)(cases_prior_avg),
cases_change=label_percent(decimal.mark=".",accuracy = .1)(cases_change)
     )

#get daily or weekly case numbers list
case_numbers_list<-weekly_numbers_wh(cases_numbers,"Cases")%>%flextable()

#format case numbers list
case_numbers_list<-case_numbers_list_format_wh(case_numbers_list)

#save the case numbers list as image
casenumbersimg<-save_as_image(case_numbers_list,path="../../resources/images/casenumbers.png",webshot="webshot2")
casenumbersimg<-readPNG("../../resources/images/casenumbers.png")
casenumbers<-rasterGrob(casenumbersimg)

cases_epicurve_for_plot<-cases_epicurve%>%select(cases_date,cases_avg,cases_new)

cases_monthly_epicurve <- cases_epicurve%>%
group_by(month=lubridate::floor_date(cases_date,'month'))%>%
mutate(cases_cummonth=sum(cases_new))%>%select(month,cases_cummonth)%>%
ungroup()%>%unique()

#define case plot function
casedaily_weekly_monthly_plot<-function(timeframe){
if(timeframe=="Weekly"|timeframe=="Daily") {
    weekly_plot_wh(cases_epicurve_for_plot,"Cases")
    }
  else if(timeframe=="Monthly") {
     monthly_plot_wh(cases_monthly_epicurve,'Cases')}
} 
#plot daily or weekly or monthly 
caseplot<-casedaily_weekly_monthly_plot(params$timeframe)

#ggplot case title
casetitleplot<-ggplot()+theme_void()+ 
    annotation_custom(casetitle,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#ggplot case numbers list
casenumbersplot<-ggplot()+theme_void()+ 
    annotation_custom(casenumbers,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#final case plot
casebottomplot<-cowplot::plot_grid(casenumbersplot,caseplot,ncol=2,rel_widths=c(1,1.5))
casefinalplot<-cowplot::plot_grid(casetitleplot,casebottomplot,nrow=2,rel_heights=c(1,3))

```

```{r warning=FALSE, message=FALSE, echo=FALSE}

casefinalplot

```

```{r hospitalplot, warning=FALSE, message=FALSE, echo=FALSE}
#get hospital date
hospend_date_raw<-max(hosp_reg_tbl$hosp_date,na.rm=TRUE)
hospend_Bdate<-format(hospend_date_raw,format="%B %d, %Y")
hospend_date<-format(hospend_date_raw,format="%m/%d/%y")

#set hospital title
hosptitle<-data.frame(title=glue("{params$timeframe} Change in COVID-19 Hospital Admissions, Region {params$region}"),subtitle=glue("August 01, 2020 - {hospend_Bdate}"))%>%
pivot_longer( cols = everything(),
                 names_to = "names",
                values_to = "val", 
               values_transform = list(val = as.character))%>%
select(val)%>%flextable()
#format hospital title and save the image
hosptitle<-title_format_wh(hosptitle)
hosptitle<-fontsize(x=hosptitle,i=1,size=23,part="body")
hosptitleimg<-save_as_image(hosptitle,path="../../resources/images/hosptitle.png",webshot="webshot2")
hosptitleimg<-readPNG("../../resources/images/hosptitle.png")
hosptitle<-rasterGrob(hosptitleimg)

#hospital numbers
hosp_epicurve <- hosp_reg_tbl %>%
mutate(#weekly admissions
       hosp_cum7 =rollsum(hosp_new,7,align = "right", fill = NA) ,
       #7 day avg admission
       hosp_avg = rollmean(hosp_new,7,align = "right", fill = NA)%>% round(0),
       #prior 7 day avg admission
       hosp_prior_avg7=lag(hosp_avg,order_by = hosp_date,7)%>% round(0),
       #percent change of 7 day avg admission
       hosp_change  = (hosp_avg - hosp_prior_avg7)/hosp_prior_avg7,
       #21 day avg admission
       hosp_avg21 = rollmean(hosp_new,21,align = "right", fill = NA)%>% round(0),
       #prior 21 day avg admission
       hosp_prior_avg21=lag(hosp_avg21,order_by = hosp_date,21)%>% round(0),
       #percent change of 21 day avg admission
       hosp_change21  = (hosp_avg21 - hosp_prior_avg21)/hosp_prior_avg21
       ) 

hosp_numbers<-hosp_epicurve%>%filter(hosp_date==max(hosp_date,na.rm=TRUE))%>%
mutate(
    #format hospital numbers
total_patients=total_patients%>%format(justify="right",big.mark=","),
hosp_cum = hosp_cum%>%format(justify="right",big.mark=","),
hosp_cum7 = hosp_cum7%>%format(justify="right",big.mark=","),
hosp_new = hosp_new%>%format(justify="right",big.mark=","),
hosp_avg=label_number(big.mark=",",accuracy=1)(hosp_avg),
hosp_prior_avg7=label_number(big.mark=",",accuracy=1)(hosp_prior_avg7),
hosp_change=label_percent(decimal.mark=".",accuracy = .1)(hosp_change),
hosp_avg21=label_number(big.mark=",",accuracy=1)(hosp_avg21),
hosp_prior_avg21=label_number(big.mark=",",accuracy=1)(hosp_prior_avg21),
hosp_change21=label_percent(decimal.mark=".",accuracy = .1)(hosp_change21)
     )

hosp_daily_numbers<-hosp_numbers%>%select(hosp_date,hosp_new,hosp_avg,hosp_prior_avg7,hosp_change,total_patients)

hosp_weekly_numbers<-hosp_numbers%>%select(hosp_date,hosp_cum7,hosp_avg21,hosp_prior_avg21,hosp_change21,total_patients)%>%rename(hosp_new=hosp_cum7)

#get weekly admissions data
hosp_weekly_epicurve <- hosp_epicurve%>%
filter(wday(hosp_date)==4)%>%select(hosp_date,hosp_cum7,hosp_avg21)%>%rename(hosp_new=hosp_cum7)
#define hospital numbers function
hospdaily_weekly_numbers<-function(timeframe){
if (timeframe=="Daily"){
    hospital_numbers_wh(hosp_epicurve,hosp_daily_numbers,"Daily")}
else if(timeframe=="Weekly"|timeframe=="Monthly") {
    hospital_numbers_wh(hosp_weekly_epicurve,hosp_weekly_numbers,"Weekly")}
}
#get daily or weekly hospital numbers list
hosp_numbers_list<-hospdaily_weekly_numbers(params$timeframe)
#format hospital numbers list
hosp_numbers_list<-hosp_numbers_list_format_wh(hosp_numbers_list)

#save hospital numbers list as image
hospnumbersimg<-save_as_image(hosp_numbers_list,path="../../resources/images/hospnumbers.png",webshot="webshot2")
hospnumbersimg<-readPNG("../../resources/images/hospnumbers.png")
hospnumbers<-rasterGrob(hospnumbersimg)



#get monthly admissions data
hosp_monthly_epicurve <- hosp_epicurve%>%
group_by(month=lubridate::floor_date(hosp_date,'month'))%>%
    mutate(hosp_cummonth=sum(hosp_new))%>%select(month,hosp_cummonth)%>%
    arrange(month)%>%ungroup()%>%unique()
#define hospital plot function
hospdaily_weekly_monthly_plot<-function(timeframe){
if (timeframe=="Daily"){
daily_hosp_plot_wh(hosp_epicurve)}
else if(timeframe=="Weekly") {
#get weekly admissions data
  weekly_plot_wh(hosp_weekly_epicurve,"Admissions")}
else if(timeframe=="Monthly") {
  monthly_plot_wh(hosp_monthly_epicurve,'Admissions')}
} 

#plot daily or weekly or monthly admissons curve
hospplot<-hospdaily_weekly_monthly_plot(params$timeframe)
#ggplot hospital title
hosptitleplot<-ggplot()+theme_void()+ 
    annotation_custom(hosptitle,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#ggplot hospital numbers list
hospnumbersplot<-ggplot()+theme_void()+ 
    annotation_custom(hospnumbers,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#form final hospital plot
hospbottomplot<-cowplot::plot_grid(hospnumbersplot,hospplot,ncol=2,rel_widths=c(1,1.5))
hospfinalplot<-cowplot::plot_grid(hosptitleplot,hospbottomplot,nrow=2,rel_heights=c(1,3))

```

```{r warning=FALSE, message=FALSE, echo=FALSE}
hospfinalplot
```

```{r deathplot, warning=FALSE, message=FALSE, echo=FALSE}
#set death title
deathtitle<-data.frame(title=if_else(params$timeframe=="Monthly",glue("Monthly Change in COVID-19 Deathss, Region {params$region}"), glue("Weekly Change in COVID-19 Deaths, Region {params$region}")),subtitle=glue("January 22, 2020 - {end_Bdate}"))%>%
pivot_longer( cols = everything(),
                 names_to = "names",
                values_to = "val", 
               values_transform = list(val = as.character))%>%
select(val)%>%flextable()
#format death title and save the image
deathtitle<-title_format_wh(deathtitle)
deathtitleimg<-save_as_image(deathtitle,path="../../resources/images/deathtitle.png",webshot="webshot2")
deathtitleimg<-readPNG("../../resources/images/deathtitle.png")
deathtitle<-rasterGrob(deathtitleimg)

#death numbers
deaths_epicurve<- death_reg_tbl %>% 
mutate(
   #current 21 day avg death
    deaths_avg=deaths_new/7%>% round(0),
    #prior 21 day avg death
    deaths_prior_avg=lag(deaths_new,order_by = deaths_date,1)/7%>% round(0),
    #percent change of 21 day avg
    deaths_change  = (deaths_avg - deaths_prior_avg)/deaths_prior_avg
       ) 
deaths_numbers<-deaths_epicurve%>%  filter(deaths_date==max(deaths_date,na.rm=TRUE))%>%
mutate(
    #format numbers
deaths_cum = deaths_cum %>% format(justify = "right", big.mark = ","),
deaths_new = deaths_new%>%format(justify="right",big.mark=","),
deaths_avg=label_number(big.mark=",",accuracy=1)(deaths_avg),
deaths_prior_avg=label_number(big.mark=",",accuracy=1)(deaths_prior_avg),
deaths_change=label_percent(decimal.mark=".",accuracy = .1)(deaths_change)
     )

#daily_death_numbers_wh(deaths_numbers)
#get daily or weekly death numbers list
death_numbers_list1<-weekly_numbers_wh(deaths_numbers,"Deaths")
death_numbers_list2<-data.frame(
        forecastname=glue("Forcasted Total Deaths by week ending ({params$forecastdate})"),
        forecastnumber=params$forecastnumber
    )%>%
        pivot_longer( cols = everything(),
                      names_to = "names",
                      values_to = "val",
                      values_transform = list(val = as.character))%>%select(val)
death_numbers_list<-death_numbers_list1%>%rbind(death_numbers_list2)%>%flextable()
#format death numbers list 
death_numbers_list<-hosp_numbers_list_format_wh(death_numbers_list)
#death_numbers_list
#death_numbers_list<-death_numbers_list_format_wh(death_numbers_list)

#save death numbers list as image
deathnumbersimg<-save_as_image(death_numbers_list,path="../../resources/images/deathnumbers.png",webshot="webshot2")
deathnumbersimg<-readPNG("../../resources/images/deathnumbers.png")
deathnumbers<-rasterGrob(deathnumbersimg)

#get weekly deaths data
deaths_epicurve_for_plot<-deaths_epicurve%>%select(deaths_date,deaths_avg,deaths_new)
#get monthly deaths data
death_monthly_epicurve <- deaths_epicurve%>%
group_by(month=lubridate::floor_date(deaths_date,'month'))%>%mutate(deaths_cummonth=sum(deaths_new))%>%select(month,deaths_cummonth)%>%arrange(month)%>%ungroup()%>%unique()

#define death plot function
deathdaily_weekly_monthly_plot<-function(timeframe){

if(timeframe=="Weekly"|timeframe=="Daily") {
weekly_plot_wh(deaths_epicurve_for_plot,"Deaths")}
  else if(timeframe=="Monthly") {
monthly_plot_wh(death_monthly_epicurve,'Deaths')}
} 
#plot daily or weekly or monthly death curve
deathplot<-deathdaily_weekly_monthly_plot(params$timeframe)
#ggplot death title
deathtitleplot<-ggplot()+theme_void()+ 
    annotation_custom(deathtitle,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#ggplot death numbers list
deathnumbersplot<-ggplot()+theme_void()+ 
    annotation_custom(deathnumbers,xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=Inf)
#final death plot
deathbottomplot<-cowplot::plot_grid(deathnumbersplot,deathplot,ncol=2,rel_widths=c(1,1.5))
deathfinalplot<-cowplot::plot_grid(deathtitleplot,deathbottomplot,nrow=2,rel_heights=c(1,3))

```

```{r warning=FALSE, message=FALSE, echo=FALSE}
deathfinalplot
```

```{r metrics,warning=FALSE, message=FALSE, echo=FALSE}
#get metrics table
table_bind <- bind_cols(cases_numbers,
                      deaths_numbers,
                    hosp_reg_tbl|> rename(hosp_daily=hosp_new)|>mutate(hosp_new=rollsum(hosp_daily,7,align="right",fill=NA))|>filter(hosp_date ==max(hosp_date)), 
                        lab_reg_tbl|> filter(testpos_date ==max(testpos_date)))
table_bind<-table_bind |>  
   
  mutate(hosp_new=hosp_new|>format(justify = "right",big.mark   =","),
         hosp_cum=hosp_cum|>format(justify = "right",big.mark   =","),
         hosp_avg=hosp_avg|>format(justify = "right",big.mark   =",")
         )|>
   select(ends_with(c("date","new","cum",'avg',"change"))) |>
  create_summary_table() |> 
 select(indicator,
       cum, 
      new,
     avg,
    change)|>slice(-c(4))|>flextable()|>metrics_format()

```

Region `r params$region` Weekly COVID Report

```{r warning=FALSE, message=FALSE, echo=FALSE}
table_bind
```
