---
title: '`r params$timeframe` COVID Report, Region `r params$region`'
format: 
    html:
        toc: true
        code-fold: false
        code-tools: true
editor: visual

params:
    sop: false
    username: 'ovt1'
    region: 4
    refreshData: false 
    timeframe: "Daily"

execute: 
  echo: false
  warning: false 
---

```{r setup, echo=params$sop}
library(tidyverse)
library(flextable)
library(gt)
library(gtExtras)
library(maps)
library(mapdata)
library(usmap)
devtools::load_all()
theme_set(theme_classic())
```

```{r refresh_data, eval = params$refreshData}
get_case_death_juris_tbl(username = params$username) |> 
    write_rds(here::here("data/cases_deaths_juris_tbl.rds"))

get_case_death_reg_tbl(username = params$username) |> 
    write_rds(here::here("data/case_death_reg_tbl.rds"))

get_hosp_reg_tbl(username = params$username) |> 
    write_rds(here::here("data/hosp_reg_tbl.rds"))

get_lab_reg_tbl(username = params$username) |> 
    write_rds(here::here("data/lab_reg_tbl.rds"))
```

# Summary

## `r params$timeframe` COVID-19 Summary Table, Region `r params$region`

::: {layout-ncol="2"}
::: {.column width="70%"}
```{r}
case_death_jur_tbl <- read_rds(here::here("data/case_death_jur_tbl.rds"))|> 
    filter(fema_region_number ==  params$region) 
case_death_reg_tbl <- read_rds(here::here("data/case_death_reg_tbl.rds")) |> 
                            strip_region() |> 
                            filter(fema_region == params$region)
case_reg_tbl   <- case_death_reg_tbl  |> 
                            select(!contains("deaths"))
death_reg_tbl  <- case_death_reg_tbl  |>  
                            select(!contains("cases"))
hosp_reg_tbl   <- read_rds(here::here("data/hosp_reg_tbl.rds"))|> 
                            strip_region() |> 
                            filter(fema_region == params$region)
lab_reg_tbl    <- read_rds(here::here("data/lab_reg_tbl.rds"))|> 
                            strip_region() |> 
                            filter(fema_region == params$region)

```

```{r}

bind_cols(case_reg_tbl  |> filter(cases_date   == max(cases_date)),
                        death_reg_tbl |> filter(deaths_date  == max(deaths_date)),
                        hosp_reg_tbl  |> filter(hosp_date    == max(hosp_date)), 
                        lab_reg_tbl   |> filter(testpos_date == max(testpos_date))) |>  
    select(ends_with(c("date","new","cum",'avg',"change"))) |>
    create_summary_table() |> 
    select(indicator,
           cum, 
           new,
           avg,
           change,
           `7cum`) |> 
    flextable()

```
:::

::: {.column width="30%"}
::: {layout-nrow="2"}
![](images/regional-offices.png)

```{r}
plot_region_map(params$region)
```
:::
:::
:::

```{r, refresh-data, eval = params$refreshData}
get_case_death_reg_tbl(username = params$username ) |> write_rds(here::here("data/case_death_reg_tbl.rds"))

get_hosp_reg_tbl(username = params$username) |> write_rds(here::here("data/hosp_reg_tbl.rds"))

get_lab_reg_tbl(username = params$username)|> write_rds(here::here("data/lab_reg_tbl.rds"))
```

## Cases and Deaths by Jurisdiction

```{r}
case_death_jur_tbl |>
    mutate(date = cases_date) |> 
    filter(date >= max(date)-30) |> 
    arrange(date) |> 
    group_by(state_name) |> 
    summarise(cases_trend =  list(cases_new),
              deaths_trend =  list(deaths_new),
              cases_cum = cases_cum[which.max(date)],
              cases_new = cases_new[which.max(date)],
              cases_avg = cases_avg[which.max(date)],
              cases_avg_per_100k = cases_avg_per_100k[which.max(date)],
              deaths_cum = deaths_cum[which.max(date)],
              deaths_new = deaths_new[which.max(date)],
              deaths_avg = deaths_avg[which.max(date)],
              deaths_avg_per_100k = deaths_avg_per_100k[which.max(date)],
              .groups = "drop"
              ) |> 
    select(-cases_trend,-deaths_trend) |> 
    gt()   |> 
    fmt_integer(columns = c("cases_cum",
                           "cases_new",
                           "cases_avg",
                           "deaths_cum",
                           "deaths_new",
                           "deaths_avg")) |> 
    fmt_number(columns = c("cases_avg_per_100k",
                           "deaths_avg_per_100k"),
               decimals = 1) |> 
    # gt_plt_sparkline(deaths_trend, 
    #                  palette = c("black", 
    #                              "black", 
    #                              "black", 
    #                              "red", 
    #                              "lightgrey"),
    #                  fig_dim = c(15,25),
    #                  same_limit = TRUE,
    #                  label = FALSE) |> 
    # gt_plt_dist(cases_trend) |> 
    gt_color_rows(columns = c("cases_avg_per_100k","deaths_avg_per_100k")) |> 
    tab_spanner("Cases", 
                columns = c("cases_cum",
                           "cases_new",
                           "cases_avg",
                           "cases_avg_per_100k")) |> 
    tab_spanner("Deaths", 
                columns = c("deaths_cum",
                           "deaths_new",
                           "deaths_avg",
                           "deaths_avg_per_100k")) |> 
    cols_label(state_name= "Jurisdiction",
               cases_cum = "Total",
               cases_new = "New",
               cases_avg = "Avg",
               cases_avg_per_100k = "Avg per 100k",
               deaths_cum = "Total",
               deaths_new = "New",
               deaths_avg = "Avg",
               deaths_avg_per_100k = "Avg per 100k") |> 
    gt_theme_espn()

```

# Cases

## `r params$timeframe` Change in COVID-19 Cases, Region `r params$region`

```{r}
plot_epi_curve(case_reg_tbl, params$timeframe, "#440154FF")
```

## `r params$timeframe` Change in COVID-19 Cases by State, Region `r params$region`

```{r}

```

# Hospitalization

## `r params$timeframe` Change in COVID-19 Hospital Admissions, Region `r params$region`

```{r}
plot_epi_curve(hosp_reg_tbl, params$timeframe, "#f27f27")
```

# Deaths

## `r params$timeframe` Change in COVID-19 Deaths, Region `r params$region`

```{r}
plot_epi_curve(death_reg_tbl, params$timeframe, "#31688EFF")
```

# Testing

## `r params$timeframe` Change in COVID-19 Testing, Region `r params$region`

```{r}
plot_epi_curve(lab_reg_tbl, params$timeframe, "#e3de42")
```
